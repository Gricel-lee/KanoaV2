/* Github version v1: https://github.com/Gricel-lee/Kanoa/blob/main/Resources/src/1%20DSL%20Generation/code/org.xtext.example.mydsl/bin/org/xtext/example/mydsl/generator/MyDslGenerator.xtend
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.nio.file.Path
import java.nio.file.Files
import java.io.IOException
import dsl.ProblemSpecification
import dsl.AtomicTask
import dsl.CompoundTask
import java.util.List
import java.util.ArrayList
import dsl.Robot


/**
 * Global Variables
 */
 


class MyDslGenerator extends AbstractGenerator {
	// Initialise global variables
	var Tree tree;
	
	// Start generator
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		//val root = resource?.allContents?.head as ProblemSpecification;
		
		// 0 Print start
		println("\nStarting generator");
		// 1 Initialise 
		tree = new Tree()
		// 2 Create tree file
		tree.createTree(resource, fsa);
		tree.generateTreeFile('modelMissionsTree.txt')
		// 2 Create alloy .als file
		AlloyFile.createAlloyFile(tree, resource);
		
		//gv.countCTpython+=1;
		//println(gv.countCTpython);
		
	}
	
}
