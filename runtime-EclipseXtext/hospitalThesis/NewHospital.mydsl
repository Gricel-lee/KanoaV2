ProblemSpecification{
	WorldModel:
	 l1 : (x 10.0 y 5.0),
	 l2 : (x 12.0 y 6.0),
	 distance l1 to l2 is 3.5
	  
	TasksModel:
	 at1 : 2 robots needed at location l1,
	 at2 : 1 robot needed at location l1,
	 at3:  1 robot needed at location l2,
	 ct1: subtasks [at1,at2],
	 ct2: subtasks [at1,ct1] constraint: consecutive,
	 ct3: subtasks [at1,at2] constraint: ordered
	 
	RobotsModel:
	 r1 : at initial position l1 has velocity 3.0 with capabilities
	 	(at1 -required time: 1.0, success rate: 95.0%,
	 	 at2 -required time: 1.0, success rate: 99.9% 
	 	)
	Mission :
		m1 : atomic task at1,
		m2 : compound task ct1,
		m3 : atomic task at2 at location l2,
		m4 : compound task ct1 at location l1
		objectives: 
			minimiseIdle, minimiseTravel, maximiseSuccess
		constraints:
			//ratesucc
				rate of success greater than 90.0,
			//spaceXYrobot
				robot r1 work in x greater than 3.0,
				all robots work in y lower than 2.0,
			//tasktime
				atomic task at1 with start time 3.2,
				mission task m1 with end time 3.2,		
			//allocateT
				allocate atomic task at1 to robot r1,
				allocate mission task m1 to robot r1,
			//closest
				allocate all tasks to closest robot,
				allocate atomic task at1 to robot r1,
			//maxtasks
				limit max number of tasks per robot to 2,
				limit max number of tasks in robot r1 to 2,
			
		parameters:
			time: 1
			evaluation: 200
}