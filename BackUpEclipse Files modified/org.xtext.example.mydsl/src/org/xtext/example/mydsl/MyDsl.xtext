/*
 * Author: Gricel Vazquez
 * Date: 15-02-2022
 */
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ProblemSpecification returns ProblemSpecification:
	{ProblemSpecification}
	'ProblemSpecification'
	'{'
		 
		'WorldModel' ':' worldModel+=WorldModel ( worldModel+=WorldModel)* 
		'TasksModel' ':' tasksModel+=TasksModel ( tasksModel+=TasksModel)*
		'RobotsModel' ':' robotsModel=RobotsModel
		'Mission' ':' mission+=Mission ( mission+=Mission)* 
		//('QoS' ':' qos+=QoS ( qos+=QoS)*)?
		(qos+=QoS ( qos+=QoS)*)?
	'}';

/// --------- Tasks
TasksModel returns TasksModel:
	AtomicTask | CompoundTask;

AtomicTask returns AtomicTask:
	{AtomicTask}
	name=EString ':'
		robots=EInt 'robots' 'needed' 
		('at' 'location' loc=[Location|EString])?
		('with' 'criticality'':'criticality=EBoolean)?
		('(''description' ':' description=EString')')?
		;


CompoundTask returns CompoundTask:
	{CompoundTask}
	name=EString ':'
		//('location' location=[Location|EString])?
		'subtasks' '['
		 canDoTask+=[TasksModel|EString] ("," canDoTask+=[TasksModel|EString])*
		
		']'
		('at' location=[Location|EString])?
		('with' 'criticality'':'criticality=EBoolean)?
		('ordered'':'ordered=EBoolean)?
		('consecutive'':'consecutive=EBoolean)?
		
		('(''description' ':' description=EString')')?
		;

/// --------- World model
WorldModel returns WorldModel:
		Location | Paths ;
Location returns Location:
	{Location}
	name=EString ':'
	'('
		'x' x=EDouble
		'y' y=EDouble
		('description' description=EString)?
	')';

Paths returns Paths:
	{Paths}
		loc1=[Location|EString] 'to'
		 loc2=[Location|EString] ','
		'distance' distance=EDouble;

/// ----------- Robots
RobotsModel returns RobotsModel:
		//'capabilities' ':' capability+=Capability (capability+=Capability)*
		'robots' ':' robots+=Robot (robots+=Robot)*
		;

Capability returns Capability:
	{Capability}
		name=EString  ':' 'can' 'do' 'atomic' 'tasks' at+=[AtomicTask|EString] 
		( "," at+=[AtomicTask|EString])* 
		('('description=EString')')?
		;
Robot returns Robot:
	{Robot}
	name=EString ':' 'at' 'initial' 'location' initLoc=[Location|EString] 
	'has' 'velocity' velocity=EDouble	
	//'with' 'capabilities' capabilities+=[Capability|EString] ( "," capabilities+=[Capability|EString])* 
	'can' 'do'
	'(' 
	robots2tasksPerformance+=Robots2tasksPerformance ( "," robots2tasksPerformance+=Robots2tasksPerformance)*
	')'
	;
Robots2tasksPerformance returns Robots2tasksPerformance:
	{Robots2tasksPerformance}
		
		at=[AtomicTask|EString]   '-' 'time required' ':' time=EDouble ',' 'success' 'probability' ':' prob=EDouble
	;


/// ----------- Missions
Mission returns Mission:
	AtomicTaskNoLoc | AtomicTaskLoc | CompTaskNoLoc | CompTaskOneLoc | CompTaskListLoc | CompTaskAtBut | CompTaskStatedBut  
	;

AtomicTaskNoLoc returns AtomicTaskNoLoc:
	{AtomicTaskNoLoc}
	name=EString ':' at=[AtomicTask|EString]
	('(' description=EString ')')?
	;
AtomicTaskLoc returns AtomicTaskLoc:
	{AtomicTaskLoc}
	name=EString ':' 
	'atomic' 'task' at=[AtomicTask|EString] 'at' loc=[Location|EString]
	('(' description=EString ')')?
	;
CompTaskNoLoc returns CompTaskNoLoc:
	{CompTaskNoLoc}
	name=EString ':'
	'compound' 'task' ct=[CompoundTask|EString] 
	('-''criticality' criticality=EString)?
	('(' description=EString ')')?
	;
CompTaskOneLoc returns CompTaskOneLoc:
	{CompTaskOneLoc}
	name=EString ':'
	'compound' 'task' ct=[CompoundTask|EString] 'at' loc=[Location|EString]
	('-''criticality' criticality=EString)?
	('(' description=EString ')')?
	;
CompTaskListLoc returns CompTaskListLoc:
	{CompTaskListLoc}
	name=EString ':'
	'compound' 'task' ct=[CompoundTask|EString] 'at' 
	'[' locationList+=[Location|EString] ( "," locationList+=[Location|EString])* ']'
	('-''criticality' criticality=EString)?
	('(' description=EString ')')? 
	;

CompTaskAtBut returns CompTaskAtBut:
	{CompTaskAtBut}
	name=EString ':'
	'compound' 'task' ct=[CompoundTask|EString] 'at' loc=[Location|EString]
	'but' '[' locationList+=LocationOrSpace ( "," locationList+=LocationOrSpace)* ']'
	('-''criticality' criticality=EString)?
	('(' description=EString ')')? 
	;
CompTaskStatedBut returns CompTaskStatedBut:
	{CompTaskStatedBut}
	name=EString ':'
	'compound' 'task' ct=[CompoundTask|EString] 'as' 'specified'
	'but' '[' locationList+=LocationOrSpace ( "," locationList+=LocationOrSpace)* ']'
	('-''criticality' criticality=EString)?
	('(' description=EString ')')? 
	;



/// ----------- QoS
QoS returns QoS:
	AllRobotsXX | AllRobotsX | RobotsXX | RobotsX | AllRobotsDeploy | NumAllocations | NumPopulation | NumEvaluations | TimeAvailable
	;
AllRobotsXX returns AllRobotsXX:
	{AllRobotsXX}
	'all' 'robots' 'work' 'between' coordinate=('x'|'y') '[' xy1=EDouble ',' xy2=EDouble ']'
	;
AllRobotsX returns AllRobotsX:
	{AllRobotsX}
	'all robots work in ' coordinate=('x'|'y') type=('greater than' | 'lower than' | 'geq' | 'leq') xy=EDouble
	;
RobotsXX returns RobotsXX:
	{RobotsXX}
	'robot' robot=[Robot|EString] 'work between'  coordinate=('x'|'y') '[' xy1=EDouble ',' xy2=EDouble ']'
	;
RobotsX returns RobotsX:
	{RobotsX}
	'robot' robot=[Robot|EString] 'work in ' coordinate=('x'|'y') type=('greater than' | 'lower than' | 'qeg' | 'leq') xy=EDouble
	;
AllRobotsDeploy returns AllRobotsDeploy:
	{AllRobotsDeploy}
	'all robot deployed'
	;
TimeAvailable returns TimeAvailable:
	{TimeAvailable}
	'time available:' number = EInt
;
NumAllocations returns NumAllocations:
	{NumAllocations}
	'system: get ' number = EInt 'number of allocations'
;
NumPopulation returns NumPopulation:
	{NumPopulation}
	'system: evochecker population' number = EInt
;
NumEvaluations returns NumEvaluations:
	{NumEvaluations}
	'system: evochecker evaluations' number = EInt
;



/// ----------- Others
LocationOrSpace returns LocationOrSpace:
	space='-' | loc=[Location|EString];
	
EString returns ecore::EString:
	STRING | ID;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';